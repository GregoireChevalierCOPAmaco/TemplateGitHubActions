version: "3.9"
volumes:
  postgres_data:
    driver: local

services:

  postgres:
    container_name: postgresdb-container
    # image: templategithubactionspostgresql
    image: postgres:11
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: pw123
    # volumes:
    #   - type: volume
    #     source: postgresdb-container
    #     target: /var/lib/postgresql/data
    ports:
      - "5432:5432"

  keycloak:
    container_name: keycloak-container
    depends_on:
      - postgres
    image: quay.io/keycloak/keycloak:latest
    # image: templategithubactionskeycloak
    command:
      - start-dev
      - -Dkeycloak.migration.strategy=IGNORE_EXISTING
    ports:
      - 8080:8080
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: jojo
      KEYCLOAK_PASSWORD: pw123
      KEYCLOAK_LOGLEVEL: DEBUG
      ROOT_LOGLEVEL: DEBUG
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/my-realm.json
      # KEYCLOAK_LOGLEVEL: DEBUG
      PROXY_ADDRESS_FORWARDING: 'true'
      KEYCLOAK_FRONTEND_URL: https://proxy/auth
      # DB_USER: keycloak
      # DB_PASSWORD: pw123
      # DB_ADDR: postgres
    # volumes:
    #   - type: volume
    #     source: keycloak-volume
    #     target: /opt/jboss/keycloak/standalone/data
    #   - type: bind
    #     source: ./keycloak/my-realm.json
    #     target: /tmp/my-realm.json

  angular:
    container_name: angular-container
    image: templategithubactionsangular
    build:
      context: app-angular-keycloak
      # dockerfile: docker/Dockerfile.angular
    command: sh -c "cd app-angular-keycloak && npm link @angular/cli && ng serve --host 0.0.0.0"
    # command: ng serve
    # command: sh -c "ls -a"
    # command: sh -c "npm i && cd app-angular-keycloak && ng serve"'
    ports: 
      - 4200:4200
  
  # pgadmin:
    # container_name: demo_pgadmin
    # image: "dpage/pgadmin4:4.24"
    # environment:
    #   PGADMIN_DEFAULT_EMAIL: keycloak
    #   PGADMIN_DEFAULT_PASSWORD: pw123
    #   PGADMIN_CONFIG_SERVER_MODE: "False"
    #   PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    # # volumes:
    # #   - pgadmin:/var/lib/pgadmin
    # #   - ./docker_pgadmin_servers.json:/pgadmin4/servers.json
    # ports:
    #   - "15433:80"
    # entrypoint:
    #   - "/bin/sh"
    #   - "-c"
    #   - "/bin/echo 'postgres:5432:*:keycloak:pw123' > /tmp/pgpassfile && chmod 600 /tmp/pgpassfile && /entrypoint.sh"
    # restart: unless-stopped    

  # keycloak:
  #   container_name: keycloak-container
  #   image: templategithubactionskeycloak
  #   environment:
  #     DB_VENDOR: POSTGRES
  #     DB_ADDR: postgres
  #     DB_DATABASE: keycloak
  #     DB_USER: keycloak
  #     DB_SCHEMA: public
  #     DB_PASSWORD: password
  #     KEYCLOAK_USER: admin
  #     KEYCLOAK_PASSWORD: Pa55w0rd
  #     # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
  #     #JDBC_PARAMS: "ssl=true"
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     - postgres 
  #   command:
  #     - start